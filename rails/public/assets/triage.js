eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"triage/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.ActiveModelAdapter.extend({\n      namespace: \'api/v1\'\n    });\n  });//# sourceURL=triage/adapters/application.js");

;eval("define(\"triage/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'triage\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'triage\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=triage/app.js");

;eval("define(\"triage/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n      content: {},\n      actions: {\n        chooseDate: function() {\n          var text = this.get(\'newCalendarDate\') || \"today\";\n          var date = Date.parse(text);\n          this.set(\'calendarDate\', date[\"toString\"](\'yyyyMMdd\'));\n          this.set(\'newCalendarDate\', \"\");\n          this.transitionToRoute(\'matters\', this.get(\'calendarDate\'));\n        }\n      }\n    });\n  });//# sourceURL=triage/controllers/application.js");

;eval("define(\"triage/controllers/events\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    });\n  });//# sourceURL=triage/controllers/events.js");

;eval("define(\"triage/controllers/matter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n      // needs: [\'calendars\'],\n      needs: [\'matters\'],\n\n      init: function() {\n        this._super();\n        this.syncPetitioner();\n        this.syncRespondent();\n        this.syncStation();\n        this.syncCheckedIn();\n        this.startPolling();\n      },\n\n      syncPetitioner: function() {\n        this.set(\'petitionerAppeared\', this.get(\'petitionerPresent\'));\n      }.observes(\'petitionerPresent\'),\n\n      syncRespondent: function() {\n        this.set(\'respondentAppeared\', this.get(\'respondentPresent\'));\n      }.observes(\'respondentPresent\'),\n\n      syncStation: function() {\n        this.set(\'station\', this.get(\'currentStation\'));\n      }.observes(\'currentStation\'),\n\n      syncCheckedIn: function() {\n        this.set(\'isInStation\', this.get(\'checkedIn\'));\n      }.observes(\'checkedIn\'),\n\n      isInTriage: function() {\n        return this.get(\'station\').indexOf(\'Triage\') > -1;\n      }.property(),\n\n      startPolling: function() {\n        return this.get(\'controllers.matters\').set(\'pausedPollingAt\', 0);\n      },\n\n      saveEvent: function(category, subject, action) {\n        var matter = this.get(\'model\');\n        var event = this.store.createRecord(\'event\', {\n          matter: matter,\n          category: category,\n          subject: subject,\n          action: action,\n          timestamp: new Date().getTime()\n        });\n        this.startPolling();\n        return event.save().then(function() {\n          // Success callback\n        }, function() {\n          // Error callback\n        });\n      },\n\n      saveAppearanceEvent: function(subject, action) {\n        return this.saveEvent(\"appearance\", subject, action);\n      },\n\n      saveStationEvent: function(subject, action) {\n        return this.saveEvent(\"station\", subject, action);\n      },\n\n      saveDispoEvent: function(subject, action) {\n        return this.saveEvent(\"disposition\", subject, action);\n      },\n\n      sendToTriage: function(station, action) {\n        var self = this;\n        self.setProperties({\'isInStation\': false, \'station\': \'Triage\'});\n        return self.saveDispoEvent(station, action).then(function() {\n          return self.saveStationEvent(\'Triage\', \'dispatch\');\n        });\n      },\n\n      actions: {\n        checkin: function(station) {\n          this.set(\'isInStation\', true);\n          return this.saveStationEvent(station, \'arrive\');\n        },\n\n        dispatch: function(station) {\n          this.setProperties({\'isInStation\': false, \'station\': station});\n          return this.saveStationEvent(station, \'dispatch\');\n        },\n\n        fullStip: function(station) {\n          return this.sendToTriage(station, \"fullstip\");\n        },\n        partialStip: function(station) {\n          return this.sendToTriage(station, \"partialstip\");\n        },\n        noStip: function(station) {\n          return this.sendToTriage(station, \"nostip\");\n        },\n\n        petitionerCheckin: function() {\n          this.set(\'petitionerAppeared\', true);\n          return this.saveAppearanceEvent(\'petitioner\', \'checkin\');\n        },\n        respondentCheckin: function() {\n          this.set(\'respondentAppeared\', true);\n          return this.saveAppearanceEvent(\'respondent\', \'checkin\');\n        },\n        petitionerCheckout: function() {\n          this.set(\'petitionerAppeared\', false);\n          this.saveAppearanceEvent(\'petitioner\', \'checkout\');\n        },\n        respondentCheckout: function() {\n          this.set(\'respondentAppeared\', false);\n          this.saveAppearanceEvent(\'respondent\', \'checkout\');\n        },\n        pausePolling: function() {\n          this.get(\'controllers.matters\').set(\'pausedPollingAt\', new Date().getTime());\n        }\n      }\n    });\n  });//# sourceURL=triage/controllers/matter.js");

;eval("define(\"triage/controllers/matters\", \n  [\"ember\",\"triage/helpers/date-helper\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var DateHelper = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n\n      init: function() {\n        this.setProperties({\n          filterProperty: \'department\',\n          filterValue: \'All\',\n          pausedPollingAt: 0\n        });\n      },\n\n      dateString: function() {\n        return DateHelper.textFormat(this.get(\'date\'));\n      }.property(\'date\'),\n\n      filtered: function() {\n        var property = this.get(\'filterProperty\');\n        var value = this.get(\'filterValue\');\n        var content = this.get(\'content\').sortBy(\'department\', \'caseNumber\');\n        if (value !== \"All\") {\n          return content.filterBy(property, value);\n        } else {\n          return content;\n        }\n      }.property(\'filterProperty\', \'filterValue\', \'@each\', \'@each.station\'),\n\n      setFilter: function(filterProperty, filterValue) {\n        this.set(\'filterProperty\', filterProperty);\n        this.set(\'filterValue\', filterValue);\n      },\n      setStationFilter: function(station) {\n        this.setFilter(\'currentStation\', station);\n      },\n      setDepartmentFilter: function(department) {\n        this.setFilter(\'department\', department);\n      },\n\n      actions: {\n        setStationFilter: function(station) {\n          this.setStationFilter(station);\n        },\n        setDepartmentFilter: function(department) {\n          this.setDepartmentFilter(department);\n        }\n      }\n    });\n  });//# sourceURL=triage/controllers/matters.js");

;eval("define(\"triage/helpers/date-helper\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\n\n      parse: function(text) {\n        return Date.parse(text[\"toString\"]());\n      },\n\n      urlFormat: function(text) {\n        return this.parse(text)[\"toString\"](\"yyyyMMdd\");\n      },\n\n      textFormat: function(text) {\n        return this.parse(text)[\"toString\"](\"MMMM dd, yyyy\");\n      }\n\n    };\n  });//# sourceURL=triage/helpers/date-helper.js");

;eval("define(\"triage/helpers/date\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\n\n      parse: function(text) {\n        return Date.parse(text[\"toString\"]());\n      },\n\n      urlFormat: function(text) {\n        return this.parse(text)[\"toString\"](\"yyyyMMdd\");\n      },\n\n      textFormat: function(text) {\n        return this.parse(text)[\"toString\"](\"MMMM dd, yyyy\");\n      }\n\n    };\n  });//# sourceURL=triage/helpers/date.js");

;eval("define(\"triage/models/calendar\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      date:    DS.attr(\'string\'),\n      matters: DS.hasMany(\'matter\', {async: true})\n    });\n  });//# sourceURL=triage/models/calendar.js");

;eval("define(\"triage/models/court-case\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      code:    DS.attr(\'string\'),\n      type:    DS.attr(\'string\'),\n      number:  DS.attr(\'string\'),\n      matters: DS.hasMany(\'matter\')\n    });\n  });//# sourceURL=triage/models/court-case.js");

;eval("define(\"triage/models/event\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      matter:     DS.belongsTo(\'matter\'),\n      category:   DS.attr(\'string\'),\n      subject:    DS.attr(\'string\'),\n      action:     DS.attr(\'string\'),\n      timestamp:  DS.attr(\'number\')\n    });\n  });//# sourceURL=triage/models/event.js");

;eval("define(\"triage/models/matter\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      calendar            : DS.belongsTo(\'calendar\'),\n      events              : DS.hasMany(\'event\', {async: true}),\n      caseNumber          : DS.attr(\'string\'),\n      currentStation      : DS.attr(\'string\'),\n      checkedIn           : DS.attr(\'boolean\'),\n      department          : DS.attr(\'string\'),\n      petitioner          : DS.attr(\'string\'),\n      respondent          : DS.attr(\'string\'),\n      petitionerPresent   : DS.attr(\'boolean\'),\n      respondentPresent   : DS.attr(\'boolean\')\n    });\n  });//# sourceURL=triage/models/matter.js");

;eval("define(\"triage/models/presentation\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      title: DS.attr(\'string\'),\n      speaker: DS.belongsTo(\'speaker\')\n    });\n  });//# sourceURL=triage/models/presentation.js");

;eval("define(\"triage/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: TriageENV.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'about\');\n      this.resource(\'speakers\', function() {\n        this.route(\'show\', {path: \':speaker_id\'});\n      });\n      this.resource(\'calendars\', {path: \'/calendars/:date\'});\n      this.resource(\'matters\', {path: \'/matters/:date\'});\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=triage/router.js");

;eval("define(\"triage/routes/matter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n    });\n  });//# sourceURL=triage/routes/matter.js");

;eval("define(\"triage/routes/matters\", \n  [\"ember\",\"triage/helpers/date-helper\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var DateHelper = __dependency2__[\"default\"];\n\n    var SECONDS = 1000;\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function(params) {\n        this.set(\'date\', DateHelper.urlFormat(params.date));\n        return this.store.find(\'matter\', {calendar: this.get(\'date\')});\n      },\n\n      activate: function() {\n        if (!window.test) {\n          this.tick();\n        }\n      },\n\n      deactivate: function() {\n        this.untick();\n      },\n\n      setupController: function (controller, model) {\n        controller.set(\'model\', model);\n        controller.set(\'date\', this.get(\'date\'));\n      },\n\n      tick: function() {\n        this.untick();\n\n        var self = this;\n        var now = new Date();\n        self.setProperties({\n          second        : now.getSeconds(),\n          quarterMinute : Math.round(now.getSeconds() / 15),\n          halfMinute    : Math.round(now.getSeconds() / 30),\n          minute        : now.getMinutes(),\n          hour          : now.getHours()\n        });\n\n        self.set(\'timer\', Ember.run.later(self, function(){\n          self.tick();\n        }, 1 * SECONDS));\n      },\n\n      pollModel: (function() {\n        var now        = new Date().getTime();\n        var controller = this.controllerFor(\'matters\');\n        var started    = controller.get(\'pausedPollingAt\');\n\n        if (now - started > 30 * SECONDS) {\n          controller.set(\'pausedPollingAt\', 0);\n          return this.store.find(\'matter\', {calendar: this.get(\'date\')});\n        }\n      }).observes(\'quarterMinute\'),\n\n      untick: function() {\n        if (this.get(\'timer\')) {\n          Ember.run.cancel(this.get(\'timer\'));\n        }\n      },\n\n    });\n  });//# sourceURL=triage/routes/matters.js");

;eval("define(\"triage/templates/-case-number\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div class=\\\"col-sm-2\\\">\\n  <button class=\\\"case-number btn btn-default disabled\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"caseNumber\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-case-number.js");

;eval("define(\"triage/templates/-department\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div class=\\\"col-sm-1\\\">\\n  <button class=\\\"department btn btn-default disabled\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"department\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-department.js");

;eval("define(\"triage/templates/-filter-bar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\">\\n  <div class=\\\"btn-group\\\">\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setDepartmentFilter\", \"All\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"department-filter btn btn-default\\\">All</button>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setStationFilter\", \"Triage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"station-filter btn btn-default\\\">Triage</button>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setDepartmentFilter\", \"F201\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"department-filter btn btn-default\\\">F201</button>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setDepartmentFilter\", \"F301\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"department-filter btn btn-default\\\">F301</button>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setDepartmentFilter\", \"F401\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"department-filter btn btn-default\\\">F401</button>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setDepartmentFilter\", \"F402\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"department-filter btn btn-default\\\">F402</button>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setStationFilter\", \"DCSS\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"station-filter btn btn-default\\\">DCSS</button>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setStationFilter\", \"CCRC\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"station-filter btn btn-default\\\">CCRC</button>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setStationFilter\", \"Self-help\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"station-filter btn btn-default\\\">Self-help</button>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setStationFilter\", \"Hearing\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"station-filter btn btn-default\\\">Hearing</button>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setStationFilter\", \"Continue\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"station-filter btn btn-default\\\">Continue</button>\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setStationFilter\", \"Off calendar\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\" type=\\\"button\\\" class=\\\"station-filter btn btn-default\\\">Off calendar</button>\\n  </div>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-filter-bar.js");

;eval("define(\"triage/templates/-navbar-form\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<form class=\\\"navbar-form navbar-right\\\" role=\\\"search\\\">\\n  <div class=\\\"form-group\\\">\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'id\': (\"date-input\"),\n        \'type\': (\"text\"),\n        \'class\': (\"form-control\"),\n        \'placeholder\': (\"Date, e.g., \'tomorrow\'\"),\n        \'value\': (\"newCalendarDate\")\n      },hashTypes:{\'id\': \"STRING\",\'type\': \"STRING\",\'class\': \"STRING\",\'placeholder\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'id\': depth0,\'type\': depth0,\'class\': depth0,\'placeholder\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n  </div>\\n  <button id=\\\"date-submit\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"chooseDate\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-default\\\">Submit</button>\\n</form>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-navbar-form.js");

;eval("define(\"triage/templates/-navbar-header\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n  Triage Tracker\\n  \");\n      }\n\n      data.buffer.push(\"<!-- Brand and toggle get grouped for better mobile display -->\\n<div class=\\\"navbar-header\\\">\\n  <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#triage-navbar-collapse-1\\\">\\n    <span class=\\\"sr-only\\\">Toggle navigation</span>\\n    <span class=\\\"icon-bar\\\"></span>\\n    <span class=\\\"icon-bar\\\"></span>\\n    <span class=\\\"icon-bar\\\"></span>\\n  </button>\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"navbar-brand\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-navbar-header.js");

;eval("define(\"triage/templates/-navbar-links\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"about\", options) : helperMissing.call(depth0, \"link-to\", \"about\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"About\");\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'id\': (\"today\")\n      },hashTypes:{\'id\': \"STRING\"},hashContexts:{\'id\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"matters\", \"today\", options) : helperMissing.call(depth0, \"link-to\", \"matters\", \"today\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Today\");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'id\': (\"tomorrow\")\n      },hashTypes:{\'id\': \"STRING\"},hashContexts:{\'id\': depth0},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"matters\", \"tomorrow\", options) : helperMissing.call(depth0, \"link-to\", \"matters\", \"tomorrow\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"Tomorrow\");\n      }\n\n      data.buffer.push(\"<ul class=\\\"nav navbar-nav\\\">\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"about\", options) : helperMissing.call(depth0, \"link-to\", \"about\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"matters\", \"today\", options) : helperMissing.call(depth0, \"link-to\", \"matters\", \"today\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"matters\", \"tomorrow\", options) : helperMissing.call(depth0, \"link-to\", \"matters\", \"tomorrow\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-navbar-links.js");

;eval("define(\"triage/templates/-navbar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<nav class=\\\"navbar navbar-inverse\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container-fluid\\\">\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar-header\", options) : helperMissing.call(depth0, \"partial\", \"navbar-header\", options))));\n      data.buffer.push(\"\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"triage-navbar-collapse-1\\\">\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar-links\", options) : helperMissing.call(depth0, \"partial\", \"navbar-links\", options))));\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar-form\", options) : helperMissing.call(depth0, \"partial\", \"navbar-form\", options))));\n      data.buffer.push(\"\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-navbar.js");

;eval("define(\"triage/templates/-petitioner\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"petitionerCheckout\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Check out \");\n      stack1 = helpers._triageMustache.call(depth0, \"petitioner\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a></li>\\n    </ul>\\n    \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"petitionerCheckin\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Check in \");\n      stack1 = helpers._triageMustache.call(depth0, \"petitioner\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a></li>\\n    </ul>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"col-sm-3\\\">\\n  <div class=\\\"btn-group dropdown-parent\\\">\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"pausePolling\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"petitionerAppeared:btn-success:btn-warning :petitioner-button :btn :dropdown-toggle\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" data-toggle=\\\"dropdown\\\">\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"petitioner\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" <span class=\\\"caret\\\"></span>\\n    </button>\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"petitionerAppeared\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n</div>\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-petitioner.js");

;eval("define(\"triage/templates/-respondent\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"respondentCheckout\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Check out \");\n      stack1 = helpers._triageMustache.call(depth0, \"respondent\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a></li>\\n    </ul>\\n    \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"respondentCheckin\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Check in \");\n      stack1 = helpers._triageMustache.call(depth0, \"respondent\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a></li>\\n    </ul>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"col-sm-3\\\">\\n  <div class=\\\"btn-group dropdown-parent\\\">\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"pausePolling\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"respondentAppeared:btn-success:btn-warning :respondent-button :btn :dropdown-toggle\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" data-toggle=\\\"dropdown\\\">\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"respondent\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" <span class=\\\"caret\\\"></span>\\n    </button>\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"respondentAppeared\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n</div>\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-respondent.js");

;eval("define(\"triage/templates/-station\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"isInTriage\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      <li role=\\\"presentation\\\" class=\\\"dropdown-header\\\">Disposition</li>\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"fullStip\", \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Full stipulation (\");\n      stack1 = helpers._triageMustache.call(depth0, \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\")</a></li>\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"partialStip\", \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Partial stipulation (\");\n      stack1 = helpers._triageMustache.call(depth0, \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\")</a></li>\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"noStip\", \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">No stipulation (\");\n      stack1 = helpers._triageMustache.call(depth0, \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\")</a></li>\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"isInTriage\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n    \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n      <li role=\\\"presentation\\\" class=\\\"dropdown-header\\\">Send to</li>\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"dispatch\", \"CCRC\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">CCRC</a></li>\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"dispatch\", \"DCSS\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">DCSS</a></li>\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"dispatch\", \"Self-help\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Self-help</a></li>\\n      <li role=\\\"presentation\\\" class=\\\"divider\\\"></li>\\n      \");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"dispatch\", \"Hearing\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Hearing</a></li>\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"dispatch\", \"Continue\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Continue</a></li>\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"dispatch\", \"Off calendar\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Off calendar</a></li>\\n      \");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n      <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"checkin\", \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Check in \");\n      stack1 = helpers._triageMustache.call(depth0, \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a></li>\\n    </ul>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"col-sm-2\\\">\\n  <div class=\\\"btn-group dropdown-parent\\\">\\n    <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"pausePolling\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"isInStation:btn-success:btn-warning :station :btn :dropdown-toggle\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" data-toggle=\\\"dropdown\\\">\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"station\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" <span class=\\\"caret\\\"></span>\\n    </button>\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"isInStation\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/-station.js");

;eval("define(\"triage/templates/about\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"page-header\\\">\\n  <h2 id=\\\"title\\\">About</h2>\\n  <p>\\n    This page talks about the Triage Tracker.\\n  </p>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=triage/templates/about.js");

;eval("define(\"triage/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar\", options) : helperMissing.call(depth0, \"partial\", \"navbar\", options))));\n      data.buffer.push(\"\\n\\n<div class=\\\"container\\\">\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/application.js");

;eval("define(\"triage/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"page-header\\\">\\n  <h2 id=\'title\'>Welcome to Triage</h2>\\n</div>\\n\\n\");\n      \n    });\n  });//# sourceURL=triage/templates/index.js");

;eval("define(\"triage/templates/loading\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"page-header\\\">\\n  <h2 id=\\\"title\\\">\\n    <img class=\\\"spinner\\\" src=\'/assets/images/spiffygif_24x24.gif\'></img>\\n    Loading calendar\\n  </h2>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=triage/templates/loading.js");

;eval("define(\"triage/templates/matter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<hr />\\n<div class=\\\"row\\\">\\n  <div class=\\\"row\\\">\\n    \\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"department\", options) : helperMissing.call(depth0, \"partial\", \"department\", options))));\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"case-number\", options) : helperMissing.call(depth0, \"partial\", \"case-number\", options))));\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"petitioner\", options) : helperMissing.call(depth0, \"partial\", \"petitioner\", options))));\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"respondent\", options) : helperMissing.call(depth0, \"partial\", \"respondent\", options))));\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"station\", options) : helperMissing.call(depth0, \"partial\", \"station\", options))));\n      data.buffer.push(\"\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    \\n    \\n  </div>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/matter.js");

;eval("define(\"triage/templates/matters\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"matter\", \"\", options) : helperMissing.call(depth0, \"render\", \"matter\", \"\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n<hr />\\n<h4>None</h4>\\n\");\n      }\n\n      data.buffer.push(\"<div class=\\\"page-header\\\">\\n  <h2 id=\\\"matters-title\\\">Triage Matters\\n    <small>\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"dateString\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\":\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"filterValue\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" cases\\n    </small>\\n  </h2>\\n</div>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"filter-bar\", options) : helperMissing.call(depth0, \"partial\", \"filter-bar\", options))));\n      data.buffer.push(\"\\n\");\n      stack1 = helpers.each.call(depth0, \"filtered\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=triage/templates/matters.js");

;eval("define(\"triage/tests/helpers/pretend-calendar-server\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* global require */\n\n    __exports__[\"default\"] = function pretendCalendarServer(attrs) {\n      var Server, pretend200, calendarForId, calendars, matters, events;\n      Server = new Pretender(function() {\n\n        this.get(\'/api/v1/calendars/:id\', function(request) {\n          return (calendarForId(request.params.id));\n        });\n\n        this.get(\'/api/v1/matters\', function(request) {\n          return (calendarForId(request.queryParams.calendar));\n        });\n\n      });\n\n      pretend200 = function (data) {\n        return [200, {\"Content-Type\": \"application/json\"}, JSON.stringify(data)];\n      };\n\n       calendarForId = function(id) {\n        var calendar, calendarMatters;\n\n        calendar = calendars.find(function(calendar) {\n          if (calendar.date === Date.parse(id).toString(\"yyyyMMdd\")) {\n            return calendar;\n          }\n        });\n\n        calendarMatters = matters.filter(function(matter) {\n          if (matter.calendar_id === calendar.id) {\n            matter.events = events.filter(function(event) {\n              if (event.matter_id === matter.id) {\n                return event;\n              }\n            });\n            return matter;\n          }\n        });\n\n        return pretend200({calendar: calendar, matters: calendarMatters});\n      };\n\n       calendars = [\n        { id: 1, date: \'20140623\', matter_ids: [1,2,3,6] },\n        { id: 2, date: \'20140624\', matter_ids: [4] },\n        { id: 3, date: \'20140630\', matter_ids: [5,6] }\n      ];\n\n       matters = [\n        { id: 1, calendar_id: 1, department: \"F201\", case_number: \"RIK2100001\", petitioner: \"KATHRYN HOLT\", petitioner_present: true, respondent: \"HARVEY STEVENS\", respondent_present: true, current_station: \"Triage\", checked_in: true, event_ids: [1,2] },\n        { id: 2, calendar_id: 1, department: \"F301\", case_number: \"RIK2100002\", petitioner: \"COURTNEY HOLLAND\", petitioner_present: true, respondent: \"WENDELL PARKS\", current_station: \"Self-help\" },\n        { id: 3, calendar_id: 1, department: \"F401\", case_number: \"RID2100003\", petitioner: \"PAM BLACK\", respondent: \"ANDREW FRANK\", current_station: \"Self-help\" },\n        { id: 4, calendar_id: 2, department: \"F402\", case_number: \"RID2100004\", petitioner: \"BRETT HOWELL\", respondent: \"JOANNE PERKINS\", current_station: \"Self-help\" },\n        { id: 5, calendar_id: 3, department: \"F402\", case_number: \"RID2100005\", petitioner: \"DUANE WOLFE\", respondent: \"MARIE HILL\", current_station: \"Self-help\" },\n        { id: 6, calendar_id: 1, department: \"F201\", case_number: \"RID2100006\", petitioner: \"EDNA WADE\", respondent: \"WAYNE ANDERSON\", current_station: \"Self-help\" }\n      ];\n\n       events = [\n        { id: 1, matter_id: 1, type: \"checkin\", subject: \"Petitioner\" },\n        { id: 2, matter_id: 1, type: \"checkin\", subject: \"Respondent\" }\n      ];\n\n      return Server;\n    }\n  });//# sourceURL=triage/tests/helpers/pretend-calendar-server.js");

;eval("define(\"triage/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'triage\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=triage/tests/helpers/resolver.js");

;eval("define(\"triage/tests/helpers/start-app\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'triage/app\')[\'default\'];\n    var Router = require(\'triage/router\')[\'default\'];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=triage/tests/helpers/start-app.js");

;eval("define(\"triage/tests/integration/about-page-test\", \n  [\"triage/tests/helpers/start-app\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n\n    var App;\n\n    module(\'Integration - Landing Page\', {\n      setup: function() {\n        App = startApp();\n      },\n      teardown: function() {\n        Ember.run(App, \'destroy\');\n      }\n    });\n\n    test(\'Should navigate to the About page\', function() {\n      visit(\'/about\');\n      andThen(function() {\n        equal(find(\'h2\').text(), \'About\', \"Expect About heading on About page\");\n      });\n    });\n\n    test(\'Should link to the Home page\', function() {\n      visit(\'/about\');\n      click(\'a:contains(\"Triage\")\');\n      andThen(function() {\n        notEqual(find(\'h2\').text(), \'About\', \"Expect no About heading on Home page\");\n      });\n    });\n  });//# sourceURL=triage/tests/integration/about-page-test.js");

;eval("define(\"triage/tests/integration/landing-page-test\", \n  [\"triage/tests/helpers/start-app\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n\n    var App;\n\n    module(\'Integration - Landing Page\', {\n      setup: function() {\n        App = startApp();\n      },\n      teardown: function() {\n        Ember.run(App, \'destroy\');\n      }\n    });\n\n    test(\'Should welcome me to Triage\', function() {\n      visit(\'/\');\n      andThen(function() {\n        equal(find(\'h2#title\').text(), \'Welcome to Triage\',\n             \"Expect index page to Welcome user\");\n      });\n    });\n\n    test(\'Should link to the About page\', function() {\n      visit(\'/\');\n      click(\"a:contains(\'About\')\");\n      andThen(function() {\n        equal(find(\'h2\').text(), \'About\', \"Expect About page to have About header\");\n      });\n    });\n  });//# sourceURL=triage/tests/integration/landing-page-test.js");

;eval("define(\"triage/tests/integration/matters-page-departments-test\", \n  [\"triage/tests/helpers/start-app\",\"triage/tests/helpers/pretend-calendar-server\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretendCalendarServer = __dependency2__[\"default\"];\n\n    var App, server;\n\n    module(\'Integration - Matters Page Departments List\', {\n      setup: function() {\n        App = startApp();\n        server = pretendCalendarServer();\n      },\n      teardown: function() {\n        Ember.run(App, \'destroy\');\n        server.shutdown();\n      }\n    });\n\n    test(\'Should list departments for matters on calendar\', function() {\n      visit(\'/matters/20140623\');\n      andThen(function() {\n        equal(find(\'button.department\').length, 4, \"Expect three cases\");\n        equal(find(\'button.department:contains(\"F201\")\').length, 2, \"Expect one case from F201\");\n        equal(find(\'button.department:contains(\"F301\")\').length, 1, \"Expect one case from F301\");\n        equal(find(\'button.department:contains(\"F401\")\').length, 1, \"Expect one case from F401\");\n      });\n    });\n\n    test(\'Should list departments in numerical order\', function() {\n      visit(\'/matters/20140623\');\n      andThen(function() {\n        equal(find(\'button.department\').first().text(), \"F201\", \"Expect first department listed to be F201\");\n        equal(find(\'button.department\').last().text(), \"F401\", \"Expect last department listed to be F401\");\n      });\n    });\n  });//# sourceURL=triage/tests/integration/matters-page-departments-test.js");

;eval("define(\"triage/tests/integration/matters-page-filters-test\", \n  [\"triage/tests/helpers/start-app\",\"triage/tests/helpers/pretend-calendar-server\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretendCalendarServer = __dependency2__[\"default\"];\n\n    var App, server;\n\n    module(\'Integration - Matters Page Filters\', {\n      setup: function() {\n        App = startApp();\n        server = pretendCalendarServer();\n\n      },\n      teardown: function() {\n        Ember.run(App, \'destroy\');\n        server.shutdown();\n      }\n    });\n\n    test(\'Should filter by department\', function() {\n      visit(\'/matters/20140623\');\n      click(\'button.department-filter:contains(\"All\")\');\n      andThen(function() {\n        equal(find(\'button.department:contains(\"F201\")\').length, 2, \"Expect filter for All to have two F201 cases\");\n        equal(find(\'button.department:contains(\"F301\")\').length, 1, \"Expect filter for All to have one F301 case\");\n        equal(find(\'button.department:contains(\"F401\")\').length, 1, \"Expect filter for All to have one F401 case\");\n      });\n\n      click(\'button.department-filter:contains(\"F201\")\');\n      andThen(function() {\n        equal(find(\'button.department:contains(\"F201\")\').length, 2, \"Expect filter for F201 to have two F201 cases\");\n        equal(find(\'button.department:contains(\"F301\")\').length, 0, \"Expect filter for F201 to have no F301 cases\");\n        equal(find(\'button.department:contains(\"F401\")\').length, 0, \"Expect filter for F201 to have no F401 cases\");\n      });\n\n      click(\'button.department-filter:contains(\"F301\")\');\n      andThen(function() {\n        equal(find(\'button.department:contains(\"F201\")\').length, 0, \"Expect filter for F301 to have no F201 cases\");\n        equal(find(\'button.department:contains(\"F301\")\').length, 1, \"Expect filter for F301 to have one F301 case\");\n        equal(find(\'button.department:contains(\"F401\")\').length, 0, \"Expect filter for F301 to have no F401 cases\");\n      });\n\n      click(\'button.station-filter:contains(\"Self-help\")\');\n      andThen(function() {\n        equal(find(\'button.station:contains(\"Triage\")\').length, 0, \"Expect Self-help filter to have no Triage cases\");\n        equal(find(\'button.station:contains(\"CCRC\")\').length, 0, \"Expect Self-help filter to have no CCRC cases\");\n        equal(find(\'button.station:contains(\"DCSS\")\').length, 0, \"Expect Self-help filter to have no DCSS cases\");\n        equal(find(\'button.station:contains(\"Self-help\")\').length, 3, \"Expect Self-help filter to have two Self-help cases\");\n      });\n    });\n  });//# sourceURL=triage/tests/integration/matters-page-filters-test.js");

;eval("define(\"triage/tests/integration/matters-page-matters-test\", \n  [\"triage/tests/helpers/start-app\",\"triage/tests/helpers/pretend-calendar-server\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretendCalendarServer = __dependency2__[\"default\"];\n\n    var App, server;\n\n    module(\'Integration - Matters Page Matters List\', {\n      setup: function() {\n        App = startApp();\n        server = pretendCalendarServer();\n      },\n      teardown: function() {\n        Ember.run(App, \'destroy\');\n        server.shutdown();\n      }\n    });\n\n    test(\'Should list all matters\', function() {\n      visit(\'/matters/20140623\');\n      andThen(function() {\n        equal(find(\'button.case-number\').length, 4, \"Expect 4 case numbers\");\n        equal(find(\'button.case-number:contains(\"RIK2100001\")\').length, 1, \"Expect RIK2100001\");\n        equal(find(\'button.case-number:contains(\"RIK2100002\")\').length, 1, \"Expect RIK2100002\");\n        equal(find(\'button.case-number:contains(\"RID2100003\")\').length, 1, \"Expect RID2100003\");\n        equal(find(\'button.case-number:contains(\"RID2100006\")\').length, 1, \"Expect RID2100006\");\n      });\n    });\n\n    test(\'Should omit matters not on calendar\', function() {\n      visit(\'/matters/20140623\');\n      andThen(function() {\n        equal(find(\'button.case-number:contains(\"RID2100004\")\').length, 0, \"Expect no RID2100004\");\n        equal(find(\'button.case-number:contains(\"RID2100005\")\').length, 0, \"Expect no RID2100005\");\n      });\n    });\n  });//# sourceURL=triage/tests/integration/matters-page-matters-test.js");

;eval("define(\"triage/tests/integration/matters-page-parties-test\", \n  [\"triage/tests/helpers/start-app\",\"triage/tests/helpers/pretend-calendar-server\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretendCalendarServer = __dependency2__[\"default\"];\n\n    var App, server;\n\n    module(\'Integration - Matters Page Parties Buttons\', {\n      setup: function() {\n        App = startApp();\n        server = pretendCalendarServer();\n      },\n      teardown: function() {\n        Ember.run(App, \'destroy\');\n        server.shutdown();\n      }\n    });\n\n    test(\'Should list the correct parties on calendar\', function() {\n      visit(\'/matters/20140623\');\n      andThen(function() {\n        isGreen(find(\'button:contains(\"KATHRYN HOLT\")\'), \'Expect KATHRYN HOLT button to be green\');\n        isGreen(find(\'button:contains(\"COURTNEY HOLLAND\")\'), \'Expect COURTNEY HOLLAND button to be green\');\n        isOrange(find(\'button:contains(\"PAM BLACK\")\'), \'Expect PAM BLACK button to be orange\');\n        isGreen(find(\'button:contains(\"HARVEY STEVENS\")\'), \'Expect HARVEY STEVENS button to be green\');\n        isOrange(find(\'button:contains(\"WENDELL PARKS\")\'), \'Expect WENDELL PARKS button to be orange\');\n        isOrange(find(\'button:contains(\"ANDREW FRANK\")\'), \'Expect ANDREW FRANK button to be orange\');\n        isOrange(find(\'button:contains(\"EDNA WADE\")\'), \'Expect EDNA WADE button to be orange\');\n        isOrange(find(\'button:contains(\"WAYNE ANDERSON\")\'), \'Expect WAYNE ANDERSON button to be orange\');\n\n        equal(find(\'button:contains(\"BRETT HOWELL\")\').length, 0, \'Expect no petitioner \"BRETT HOWELL\"\');\n        equal(find(\'button:contains(\"DUANE WOLFE\")\').length, 0, \'Expect no petitioner \"DUANE WOLFE\"\');\n        equal(find(\'button:contains(\"JOANNE PERKINS\")\').length, 0, \'Expect no respondent \"JOANNE PERKINS\"\');\n        equal(find(\'button:contains(\"MARIE HILL\")\').length, 0, \'Expect no respondent \"MARIE HILL\"\');\n      });\n    });\n\n    test(\'Should check in and check out parties\', function() {\n      visit(\'/matters/20140623\');\n\n      click(\'button:contains(\"HARVEY STEVENS\")\');\n      click(\'a:contains(\"Check out HARVEY STEVENS\")\');\n      andThen(function() {\n        isOrange(find(\'button:contains(\"HARVEY STEVENS\")\'), \'HARVEY STEVENS button should turn orange\');\n      });\n\n      click(\'button:contains(\"COURTNEY HOLLAND\")\');\n      click(\'a:contains(\"Check out COURTNEY HOLLAND\")\');\n      andThen(function() {\n        isOrange(find(\'button:contains(\"COURTNEY HOLLAND\")\'), \'COURTNEY HOLLAND button should turn orange\');\n      });\n\n      click(\'button:contains(\"WENDELL PARKS\")\');\n      click(\'a:contains(\"Check in WENDELL PARKS\")\');\n      andThen(function() {\n        isGreen(find(\'button:contains(\"WENDELL PARKS\")\'), \'WENDELL PARKS button should turn green\');\n      });\n\n      click(\'button:contains(\"PAM BLACK\")\');\n      click(\'a:contains(\"Check in PAM BLACK\")\');\n      andThen(function() {\n        isGreen(find(\'button:contains(\"PAM BLACK\")\'), \'PAM BLACK button should turn green\');\n      });\n    });\n\n    function isOrange(element, message) {\n      equal(element.attr(\'class\').match(/btn-warning/), \"btn-warning\", message);\n    }\n\n    function isGreen(element, message) {\n      equal(element.attr(\'class\').match(/btn-success/), \"btn-success\", message);\n    }\n\n    function hasText(element, text, message) {\n      equal(element.text().trim(), text, message);\n    }\n  });//# sourceURL=triage/tests/integration/matters-page-parties-test.js");

;eval("define(\"triage/tests/integration/matters-page-test\", \n  [\"triage/tests/helpers/start-app\",\"triage/tests/helpers/pretend-calendar-server\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretendCalendarServer = __dependency2__[\"default\"];\n\n    var App, server;\n\n    module(\'Integration - Matters Page\', {\n      setup: function() {\n        App = startApp();\n        server = pretendCalendarServer();\n\n      },\n      teardown: function() {\n        Ember.run(App, \'destroy\');\n        server.shutdown();\n      }\n    });\n\n    test(\'Should navigate to the Matters page\', function() {\n      visit(\'/matters/20140623\');\n      andThen(function() {\n        equal(find(\'.page-header:contains(\"Triage Matters\")\').length, 1, \"Expect page to contain \'Triage Matters\'\");\n        equal(find(\'.page-header:contains(\"All cases\")\').length, 1, \"Expect page to contain \'All cases\'\");\n        equal(find(\'.page-header:contains(\"June 23, 2014\")\').length, 1, \"Expect page to contain \'June 23, 2014\'\");\n      });\n    });\n\n    test(\'Should navigate to the date typed into the date form\', function() {\n      visit(\'/\');\n      fillIn(\'#date-input\', \'6/24/14\');\n      click(\'#date-submit\');\n      andThen(function() {\n        equal(find(\'.page-header:contains(\"Triage Matters\")\').length, 1, \"Expect page to contain \'Triage Matters\'\");\n        equal(find(\'.page-header:contains(\"All cases\")\').length, 1, \"Expect page to contain \'All cases\'\");\n        equal(find(\'.page-header:contains(\"June 24, 2014\")\').length, 1, \"Expect page to contain \'June 23, 2014\'\");\n      });\n    });\n  });//# sourceURL=triage/tests/integration/matters-page-test.js");

;eval("define(\"triage/tests/integration/matters-pages-stations-test\", \n  [\"triage/tests/helpers/start-app\",\"triage/tests/helpers/pretend-calendar-server\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretendCalendarServer = __dependency2__[\"default\"];\n\n    var App, server;\n\n    module(\'Integration - Matters Page Station Button\', {\n      setup: function() {\n        App = startApp();\n        server = pretendCalendarServer();\n      },\n      teardown: function() {\n        Ember.run(App, \'destroy\');\n        server.shutdown();\n      }\n    });\n\n    test(\'Should allow changing stations\', function() {\n      visit(\'/matters/20140623\').then(function() {\n        var button = find(\'button.station:contains(\"Triage\")\').first();\n        var sendToCount = find(\'li:contains(\"Send to\")\').length;\n        equal(sendToCount, 1, \"There should be one \'Send to\' menu\");\n\n        isGreen(button, \'\"Triage\" button should start out green\');\n\n        click(button).then(function() {\n          click(\'a:contains(\"CCRC\")\').then(function() {\n            isOrange(button, \'After dispatch, button should turn orange\');\n            hasText(button, \"CCRC\", \'After dispatch, text should change to \"CCRC\"\');\n          });\n        });\n\n        click(button).then(function() {\n          click(\'a:contains(\"Check in CCRC\")\').then(function() {\n            isGreen(button, \'After checkin, button should turn green\');\n            hasText(button, \"CCRC\", \'After check-in, text should remain \"CCRC\"\');\n          });\n        });\n\n        click(button).then(function() {\n          // equal(sendToCount, 0, \"There should be no \'Send to\' menu\");\n          click(\'a:contains(\"Partial stipulation (CCRC)\")\').then(function() {\n            isOrange(button, \'After partial stip, button should turn orange\');\n            hasText(button, \"Triage\", \'After partial stip, text should change to \"Triage\"\');\n          });\n        });\n\n        click(button).then(function() {\n          click(\'a:contains(\"Check in Triage\")\').then(function() {\n            isGreen(button, \'After checkin, button should turn green\');\n            hasText(button, \"Triage\", \'After checkin, text should remain \"Triage\"\');\n          });\n        });\n\n        click(button).then(function() {\n          click(\'a:contains(\"DCSS\")\').then(function() {\n            isOrange(button, \'After dispatch, button should turn orange\');\n            hasText(button, \"DCSS\", \'After dispatch, text should change to \"DCSS\"\');\n          });\n        });\n\n        click(button).then(function() {\n          click(\'a:contains(\"Check in DCSS\")\').then(function() {\n            isGreen(button, \'After checkin, button should turn green\');\n            hasText(button, \"DCSS\", \'After checkin, text should remain \"DCSS\"\');\n            // equal(find(\'li:contains(\"Send to\")\').length, sendToCount, \"Should have one fewer Send to header\");\n          });\n        });\n\n      });\n    });\n\n\n    function isOrange(element, message) {\n      equal(element.attr(\'class\').match(/btn-warning/), \"btn-warning\", message);\n    }\n\n    function isGreen(element, message) {\n      equal(element.attr(\'class\').match(/btn-success/), \"btn-success\", message);\n    }\n\n    function hasText(element, text, message) {\n      equal(element.text().trim(), text, message);\n    }\n  });//# sourceURL=triage/tests/integration/matters-pages-stations-test.js");

;eval("define(\"triage/tests/test-helper\", \n  [\"triage/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=triage/tests/test-helper.js");

;eval("define(\"triage/tests/triage/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/adapters\');\n    test(\'triage/adapters/application.js should pass jshint\', function() { \n      ok(true, \'triage/adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/adapters/application.jshint.js");

;eval("define(\"triage/tests/triage/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage\');\n    test(\'triage/app.js should pass jshint\', function() { \n      ok(true, \'triage/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/app.jshint.js");

;eval("define(\"triage/tests/triage/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/controllers\');\n    test(\'triage/controllers/application.js should pass jshint\', function() { \n      ok(true, \'triage/controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/controllers/application.jshint.js");

;eval("define(\"triage/tests/triage/controllers/events.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/controllers\');\n    test(\'triage/controllers/events.js should pass jshint\', function() { \n      ok(true, \'triage/controllers/events.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/controllers/events.jshint.js");

;eval("define(\"triage/tests/triage/controllers/matter.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/controllers\');\n    test(\'triage/controllers/matter.js should pass jshint\', function() { \n      ok(true, \'triage/controllers/matter.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/controllers/matter.jshint.js");

;eval("define(\"triage/tests/triage/controllers/matters.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/controllers\');\n    test(\'triage/controllers/matters.js should pass jshint\', function() { \n      ok(true, \'triage/controllers/matters.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/controllers/matters.jshint.js");

;eval("define(\"triage/tests/triage/helpers/date-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/helpers\');\n    test(\'triage/helpers/date-helper.js should pass jshint\', function() { \n      ok(true, \'triage/helpers/date-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/helpers/date-helper.jshint.js");

;eval("define(\"triage/tests/triage/helpers/date.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/helpers\');\n    test(\'triage/helpers/date.js should pass jshint\', function() { \n      ok(true, \'triage/helpers/date.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/helpers/date.jshint.js");

;eval("define(\"triage/tests/triage/models/calendar.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/models\');\n    test(\'triage/models/calendar.js should pass jshint\', function() { \n      ok(true, \'triage/models/calendar.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/models/calendar.jshint.js");

;eval("define(\"triage/tests/triage/models/court-case.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/models\');\n    test(\'triage/models/court-case.js should pass jshint\', function() { \n      ok(true, \'triage/models/court-case.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/models/court-case.jshint.js");

;eval("define(\"triage/tests/triage/models/event.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/models\');\n    test(\'triage/models/event.js should pass jshint\', function() { \n      ok(true, \'triage/models/event.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/models/event.jshint.js");

;eval("define(\"triage/tests/triage/models/matter.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/models\');\n    test(\'triage/models/matter.js should pass jshint\', function() { \n      ok(true, \'triage/models/matter.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/models/matter.jshint.js");

;eval("define(\"triage/tests/triage/models/presentation.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/models\');\n    test(\'triage/models/presentation.js should pass jshint\', function() { \n      ok(true, \'triage/models/presentation.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/models/presentation.jshint.js");

;eval("define(\"triage/tests/triage/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage\');\n    test(\'triage/router.js should pass jshint\', function() { \n      ok(true, \'triage/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/router.jshint.js");

;eval("define(\"triage/tests/triage/routes/matter.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/routes\');\n    test(\'triage/routes/matter.js should pass jshint\', function() { \n      ok(true, \'triage/routes/matter.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/routes/matter.jshint.js");

;eval("define(\"triage/tests/triage/routes/matters.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/routes\');\n    test(\'triage/routes/matters.js should pass jshint\', function() { \n      ok(true, \'triage/routes/matters.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/routes/matters.jshint.js");

;eval("define(\"triage/tests/triage/tests/helpers/pretend-calendar-server.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/helpers\');\n    test(\'triage/tests/helpers/pretend-calendar-server.js should pass jshint\', function() { \n      ok(true, \'triage/tests/helpers/pretend-calendar-server.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/helpers/pretend-calendar-server.jshint.js");

;eval("define(\"triage/tests/triage/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/helpers\');\n    test(\'triage/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'triage/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/helpers/resolver.jshint.js");

;eval("define(\"triage/tests/triage/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/helpers\');\n    test(\'triage/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'triage/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/helpers/start-app.jshint.js");

;eval("define(\"triage/tests/triage/tests/integration/about-page-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/integration\');\n    test(\'triage/tests/integration/about-page-test.js should pass jshint\', function() { \n      ok(true, \'triage/tests/integration/about-page-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/integration/about-page-test.jshint.js");

;eval("define(\"triage/tests/triage/tests/integration/landing-page-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/integration\');\n    test(\'triage/tests/integration/landing-page-test.js should pass jshint\', function() { \n      ok(true, \'triage/tests/integration/landing-page-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/integration/landing-page-test.jshint.js");

;eval("define(\"triage/tests/triage/tests/integration/matters-page-departments-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/integration\');\n    test(\'triage/tests/integration/matters-page-departments-test.js should pass jshint\', function() { \n      ok(true, \'triage/tests/integration/matters-page-departments-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/integration/matters-page-departments-test.jshint.js");

;eval("define(\"triage/tests/triage/tests/integration/matters-page-filters-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/integration\');\n    test(\'triage/tests/integration/matters-page-filters-test.js should pass jshint\', function() { \n      ok(true, \'triage/tests/integration/matters-page-filters-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/integration/matters-page-filters-test.jshint.js");

;eval("define(\"triage/tests/triage/tests/integration/matters-page-matters-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/integration\');\n    test(\'triage/tests/integration/matters-page-matters-test.js should pass jshint\', function() { \n      ok(true, \'triage/tests/integration/matters-page-matters-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/integration/matters-page-matters-test.jshint.js");

;eval("define(\"triage/tests/triage/tests/integration/matters-page-parties-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/integration\');\n    test(\'triage/tests/integration/matters-page-parties-test.js should pass jshint\', function() { \n      ok(true, \'triage/tests/integration/matters-page-parties-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/integration/matters-page-parties-test.jshint.js");

;eval("define(\"triage/tests/triage/tests/integration/matters-page-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/integration\');\n    test(\'triage/tests/integration/matters-page-test.js should pass jshint\', function() { \n      ok(true, \'triage/tests/integration/matters-page-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/integration/matters-page-test.jshint.js");

;eval("define(\"triage/tests/triage/tests/integration/matters-pages-stations-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests/integration\');\n    test(\'triage/tests/integration/matters-pages-stations-test.js should pass jshint\', function() { \n      ok(true, \'triage/tests/integration/matters-pages-stations-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/integration/matters-pages-stations-test.jshint.js");

;eval("define(\"triage/tests/triage/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - triage/tests\');\n    test(\'triage/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'triage/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=triage/tests/triage/tests/test-helper.jshint.js");
